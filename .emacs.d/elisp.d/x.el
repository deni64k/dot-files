;;; x.el ---
;; Copyright (c) 2009, Denis Sukhonin <d.sukhonin@gmail.com>

(require 'color-theme)

(defun negval/x-clipboard nil
  (setq x-select-enable-clipboard nil)      ; copy-paste should work ...
  (setq interprogram-paste-function         ; ...with...
        'x-cut-buffer-or-selection-value))  ; ...other X clients

(defun negval/x-bars nil
  (scroll-bar-mode 0)
  (tool-bar-mode 0)
  (menu-bar-mode 0))

(defun negval/x-etc nil
  ;; show-paren-mode
  ;; show a subtle blinking of the matching paren (the defaults are ugly)
  ;; http://www.emacswiki.org/cgi-bin/wiki/ShowParenMode
  (when-available 'show-paren-mode
    (progn
      (setq show-paren-style 'expression)
      (show-paren-mode t)))

  ;; highlight the current line; set a custom face, so we can
  ;; recognize from the normal marking (selection)
  ;; don't turn in on globally, only in specific modes (see negval/c-mode-hook)
  (when-available 'global-hl-line-mode
    (progn
      (setq hl-line-face 'hl-line)
      (global-hl-line-mode t))) ;; turn it on for all modes by default

  (when-available 'set-fringe-mode    ; emacs22+
    (progn
      (set-fringe-mode '(nil . 0))
      (setq indicate-buffer-boundaries 'left)
      ))

  (mouse-wheel-mode t)               ; turn on mouse's wheel
  )

(defvar negval/*cursor-color*)
(defvar negval/*cursor-color-ro*)
(defvar negval/*background-color*)
(defvar negval/*foreground-color*)

(defun negval/x-dark-theme ()
  "Color theme by Denis Sukhonin, created 2009-11-17."
  (interactive)

  (setq negval/*cursor-color*     "DodgerBlue2")
  (setq negval/*cursor-color-ro*  "White")
  (setq negval/*background-color* "Black")
  (setq negval/*foreground-color* "DodgerBlue1")

  (let ((face-req '((class color) (background dark))))
    (color-theme-install
     `(negval/x-dark-theme
       ((background-color . "Black")
        (background-mode  . dark)
        (border-color     . "DodgerBlue4")
        (cursor-color     . ,negval/*cursor-color*)
        (foreground-color . "DodgerBlue1")
        (mouse-color      . "DodgerBlue2"))
       ((hl-line-face . hl-line)
        )
       ;; TODO: надо бы тут разобраться...
       ;; ((align-highlight-change-face . highlight)
       ;;  (align-highlight-nochange-face . secondary-selection)
       ;;  (apropos-keybinding-face . underline)
       ;;  (apropos-label-face italic variable-pitch)
       ;;  (apropos-match-face . match)
       ;;  (apropos-property-face . bold-italic)
       ;;  (apropos-symbol-face . bold)
       ;;  (compilation-message-face . underline)
       ;;  (cperl-here-face . font-lock-string-face)
       ;;  (cperl-invalid-face . off)
       ;;  (cperl-pod-face . font-lock-comment-face)
       ;;  (cperl-pod-head-face . font-lock-variable-name-face)
       ;;  (diary-face . diary)
       ;;  (display-time-mail-face . mode-line)
       ;;  (goto-address-mail-face . italic)
       ;;  (goto-address-mail-mouse-face . secondary-selection)
       ;;  (goto-address-url-face . link)
       ;;  (goto-address-url-mouse-face . highlight)
       ;;  (info-lookup-highlight-face . match)
       ;;  (ispell-highlight-face . flyspell-incorrect)
       ;;  (list-matching-lines-buffer-name-face . underline)
       ;;  (list-matching-lines-face . bold)
       ;;  (org-goto-interface . outline)
       ;;  (org-remember-interactive-interface . refile)
       ;;  (php-default-face . default)
       ;;  (tags-tag-face . default)
       ;;  (view-highlight-face . highlight)
       ;;  (w3m-form-mouse-face . highlight)
       ;;  (widget-mouse-face . highlight)
       ;;  (word-count-marker-face . word-count-marker-face)
       ;;  (word-count-region-face . word-count-region-face))
       ;; faces
       (sans        ((,face-req (:family "Droid Sans"))))
       (serif       ((,face-req (:family "Droid Serif"))))
       (variable-pitch ((,face-req (:inherit sans))))
       (fixed-pitch    ((,face-req (:family "Monaco"))))
       (bold        ((,face-req (:bold t :weight bold))))
       (bold-italic ((,face-req (:italic t :bold t :slant italic :weight bold))))
       (italic      ((,face-req (:italic t :slant italic))))
       (small       ((,face-req (:height 0.85))))
       (default     ((,face-req (:inherit fixed-pitch :height 80))))

       (fringe    ((,face-req (:background "grey10"))))
       (highlight ((,face-req (:foreground "orange" :underline "orange" :inherit bold))))
       (region    ((,face-req (:background "midnight blue"))))
       (match     ((,face-req (:background "midnight blue"))))
       (lazy-highlight ((,face-req (:background "midnight blue"))))
       (hl-line   ((,face-req (:background "gray5"))))
       (mode-line ((,face-req (:background "gray10" :foreground "gray90"
                                   :inverse-video nil :box nil
                                   :inherit (sans small)))))
       (mode-line-buffer-id ((,face-req (:foreground "green"))))
       (mode-line-emphasis  ((,face-req (:inherit bold))))
       (mode-line-highlight ((,face-req (:inherit highlight))))
       (mode-line-inactive  ((,face-req (:background "gray7" :foreground "gray90"
                                             :inverse-video nil :box nil
                                             :family "Droid Sans" :height 0.85 :width condensed))))
       (modeline-mousable            ((,face-req (:box (:line-width 1 :style none)))))
       (modeline-mousable-minor-mode ((,face-req (:box (:line-width 1 :style none)))))
       (which-func ((,face-req (:foreground "lime green" :width condensed :inherit fixed-pitch))))
       (border ((,face-req (:background "DodgerBlue4"))))
       (show-paren-match ((,face-req (:background "gray10"))))
       (show-paren-mismatch ((,face-req (:foreground "Red" :inherit bold))))
       (header-line ((,face-req (:background "gray10" :inherit (fixed-pitch)))))
       (flymake-errline  ((,face-req (:underline "Red2"  :inherit bold))))
       (flymake-warnline ((,face-req (:underline "Gold3" :inherit bold))))
       (flyspell-incorrect ((,face-req (:underline "Red2"))))
       (flyspell-duplicate ((,face-req (:underline "Gold3"))))
       (linum ((,face-req (:foreground "Green" :inherit (fringe)))))

       (font-lock-builtin-face           ((,face-req (:foreground "LightSteelBlue"))))
       (font-lock-comment-delimiter-face ((,face-req (:foreground "Tan3"))))
       (font-lock-comment-face           ((,face-req (:foreground "Tan1"))))
       (font-lock-constant-face          ((,face-req (:foreground "Aquamarine"))))
       (font-lock-doc-face               ((,face-req (:foreground "LightSalmon" :background "Gray10"))))
       (font-lock-doc-string-face        ((,face-req (:foreground "LightSalmon" :background "Gray10"))))
       (font-lock-function-name-face     ((,face-req (:foreground "LightSkyBlue" :inherit bold))))
       (font-lock-keyword-face           ((,face-req (:foreground "Cyan"))))
       (font-lock-preprocessor-face      ((,face-req (:foreground "Aquamarine"))))
       (font-lock-reference-face         ((,face-req (:foreground "LightSteelBlue"))))
       (font-lock-string-face            ((,face-req (:foreground "LightSalmon"))))
       (font-lock-type-face              ((,face-req (:foreground "PaleGreen" :inherit bold))))
       (font-lock-variable-name-face     ((,face-req (:foreground "LightGoldenrod"))))
       (font-lock-warning-face           ((,face-req (:bold t :foreground "Pink" :weight bold))))

       (widget-button ((,face-req (:bold t :weight bold))))
       (widget-button-pressed ((,face-req (:foreground "red"))))
       (widget-documentation ((,face-req (:inherit font-lock-comment-face))))
       (widget-field ((,face-req (:background "gray10" :box t))))
       (widget-inactive ((,face-req (:foreground "light gray"))))
       (widget-single-line-field ((,face-req (:background "gray10" :box t))))

       (toolbar ((,face-req (:background "DodgerBlue2" :foreground "white"
                                 :box (:line-width 1 :color "DodgerBlue1" :style released-button)))))
       (custom-button ((,face-req (:background "DodgerBlue4" :foreground "white"
                                       :box (:line-width 1 :color "DodgerBlue4" :style released-button)))))
       (custom-button-mouse ((,face-req (:background "DodgerBlue3" :inherit custom-button))))
       (custom-button-pressed ((,face-req (:background "DodgerBlue4" :foreground "White"
                                               :box (:line-width 1 :color "DodgerBlue4" :style pressed-button)))))

       (dired-directory ((,face-req (:foreground "LightSkyBlue" :inherit bold))))
       ;; (dired-flagged ((,face-req (:bold t :weight bold :foreground "Pink"))))
       ;; (dired-header ((,face-req (:foreground "PaleGreen"))))
       ;; (dired-ignored ((,face-req (:foreground "grey70"))))
       ;; (dired-mark ((,face-req (:foreground "Aquamarine"))))
       ;; (dired-marked ((,face-req (:bold t :weight bold :foreground "Pink"))))
       ;; (dired-perm-write ((,face-req (:foreground "chocolate1"))))
       (dired-symlink ((,face-req (:foreground "Cyan"))))
       ;; (dired-warning ((,face-req (:bold t :weight bold :foreground "Pink"))))

       (diff-added ((,face-req (:foreground "Green1"))))
       (diff-changed ((,face-req (:foreground "Light Slate Blue"))))
       (diff-context ((,face-req (:foreground "White"))))
       (diff-file-header ((,face-req (:background "LightGray" :foreground "Red4"))))
       (diff-file1-hunk-header ((,face-req (:background "DarkSeaGreen1" :foreground "Blue"))))
       (diff-file2-hunk-header ((,face-req (:background "PaleGoldenrod" :foreground "Red"))))
       (diff-function ((,face-req (:foreground "Red"))))
       (diff-header ((,face-req (:foreground "DodgerBlue2"))))
       (diff-hunk-header ((,face-req (:background "Salmon" :foreground "Blue"))))
       (diff-index ((,face-req (:foreground "Green"))))
       (diff-indicator-added ((,face-req (:background "green4" :foreground "PaleGoldenrod"))))
       (diff-indicator-changed ((,face-req (:background "Dark Slate Blue" :foreground "PaleGoldenrod"))))
       (diff-indicator-removed ((,face-req (:background "firebrick4" :foreground "PaleGoldenrod"))))
       (diff-nonexistent ((,face-req (:foreground "Blue"))))
       (diff-refine-change ((,face-req (:background nil :box t))))
       (diff-removed ((,face-req (:foreground "firebrick1"))))
       ;; jabber-mode
       (jabber-roster-user-online ((,face-req (:foreground "White"))))
       (jabber-roster-user-away   ((,face-req (:foreground "Dark Green"))))
       (jabber-roster-user-xa     ((,face-req (:foreground "Dark Violet"))))
       (jabber-title-small  ((,face-req (:foreground "Dodger Blue" :height 1.3 :underline t
                                         :inherit (variable-pitch bold)))))
       (jabber-title-medium ((,face-req (:foreground "Dodger Blue" :height 2.0 :underline t
                                         :inherit (variable-pitch bold)))))
       (jabber-title-large  ((,face-req (:foreground "Dodger Blue" :height 3.0 :underline t
                                         :inherit (variable-pitch bold)))))
       ;; slime
       (slime-highlight-edits-face ((,face-req (:background "Midnight Blue"))))
       ))))

(add-to-list 'color-themes '(negval/x-dark-theme  "My dark theme" "Denis Sukhonin"))

     ;; (help-argument-name ((t (nil))))
     ;; (bg:erc-color-face0 ((t (:background "White"))))
     ;; (bg:erc-color-face1 ((t (:background "black"))))
     ;; (bg:erc-color-face10 ((t (:background "lightblue1"))))
     ;; (bg:erc-color-face11 ((t (:background "cyan"))))
     ;; (bg:erc-color-face12 ((t (:background "blue"))))
     ;; (bg:erc-color-face13 ((t (:background "deeppink"))))
     ;; (bg:erc-color-face14 ((t (:background "gray50"))))
     ;; (bg:erc-color-face15 ((t (:background "gray90"))))
     ;; (bg:erc-color-face2 ((t (:background "blue4"))))
     ;; (bg:erc-color-face3 ((t (:background "green4"))))
     ;; (bg:erc-color-face4 ((t (:background "red"))))
     ;; (bg:erc-color-face5 ((t (:background "brown"))))
     ;; (bg:erc-color-face6 ((t (:background "purple"))))
     ;; (bg:erc-color-face7 ((t (:background "orange"))))
     ;; (bg:erc-color-face8 ((t (:background "yellow"))))
     ;; (bg:erc-color-face9 ((t (:background "green"))))
     ;; (buffer-menu-buffer ((t (:bold t :weight bold))))
     ;; (button ((t (:underline t))))
     ;; (calendar-today ((t (:underline t))))
     ;; (comint-highlight-input ((t (:bold t :weight bold))))
     ;; (comint-highlight-prompt ((t (:foreground "cyan"))))
     ;; (compilation-column-number ((t (:foreground "PaleGreen"))))
     ;; (compilation-error ((t (:bold t :weight bold :foreground "Pink"))))
     ;; (compilation-info ((t (:bold t :foreground "Green1" :weight bold))))
     ;; (compilation-line-number ((t (:foreground "LightGoldenrod"))))
     ;; (compilation-warning ((t (:bold t :foreground "Orange" :weight bold))))
     ;; (completions-common-part ((t (:family "Monaco" :foundry "unknown" :width normal :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :foreground "SteelBlue" :background "Black" :stipple nil :height 80))))
     ;; (completions-first-difference ((t (:bold t :weight bold))))
     ;; (cperl-array-face ((t (:bold t :background "navy" :foreground "yellow" :weight bold))))
     ;; (cperl-hash-face ((t (:italic t :bold t :background "navy" :foreground "Red" :slant italic :weight bold))))
     ;; (cperl-nonoverridable-face ((t (:foreground "orchid1"))))
     ;; (diary ((t (:foreground "yellow1"))))
     ;; (diary-anniversary ((t (:foreground "Cyan"))))
     ;; (diary-button ((t (nil))))
     ;; (diary-time ((t (:foreground "LightGoldenrod"))))
     ;; (dropdown-list-face ((t (:family "Monaco" :foundry "unknown" :width normal :weight normal :slant normal :underline nil :overline nil :strike-through nil :box nil :inverse-video nil :stipple nil :background "lightyellow" :foreground "black" :height 80))))
     ;; (dropdown-list-selection-face ((t (:foreground "black" :stipple nil :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :width normal :foundry "unknown" :family "Monaco" :background "purple" :height 80))))
     ;; (eieio-custom-slot-tag-face ((t (:foreground "light blue"))))
     ;; (eldoc-highlight-function-argument ((t (:bold t :weight bold))))
     ;; (epa-field-body ((t (:italic t :foreground "turquoise" :slant italic))))
     ;; (epa-field-name ((t (:bold t :foreground "PaleTurquoise" :weight bold))))
     ;; (epa-mark ((t (:bold t :foreground "orange" :weight bold))))
     ;; (epa-string ((t (:foreground "lightyellow"))))
     ;; (epa-validity-disabled ((t (:italic t :slant italic))))
     ;; (epa-validity-high ((t (:bold t :foreground "PaleTurquoise" :weight bold))))
     ;; (epa-validity-low ((t (:italic t :slant italic))))
     ;; (epa-validity-medium ((t (:italic t :foreground "PaleTurquoise" :slant italic))))
     ;; (erc-action-face ((t (:bold t :weight bold))))
     ;; (erc-bold-face ((t (:bold t :weight bold))))
     ;; (erc-dangerous-host-face ((t (:foreground "red"))))
     ;; (erc-default-face ((t (nil))))
     ;; (erc-direct-msg-face ((t (:foreground "IndianRed"))))
     ;; (erc-error-face ((t (:background "Red" :foreground "White"))))
     ;; (erc-fool-face ((t (:foreground "dim gray"))))
     ;; (erc-input-face ((t (:foreground "brown"))))
     ;; (erc-inverse-face ((t (:background "Black" :foreground "White"))))
     ;; (erc-keyword-face ((t (:bold t :foreground "pale green" :weight bold))))
     ;; (erc-notice-face ((t (:bold t :foreground "SlateBlue" :weight bold))))
     ;; (erc-pal-face ((t (:bold t :foreground "Magenta" :weight bold))))
     ;; (erc-prompt-face ((t (:bold t :background "lightBlue2" :foreground "Black" :weight bold))))
     ;; (erc-timestamp-face ((t (:bold t :foreground "green" :weight bold))))
     ;; (erc-underline-face ((t (:underline t))))
     ;; (escape-glyph ((t (:foreground "cyan"))))
     ;; (fg:erc-color-face0 ((t (:foreground "White"))))
     ;; (fg:erc-color-face1 ((t (:foreground "black"))))
     ;; (fg:erc-color-face10 ((t (:foreground "lightblue1"))))
     ;; (fg:erc-color-face11 ((t (:foreground "cyan"))))
     ;; (fg:erc-color-face12 ((t (:foreground "blue"))))
     ;; (fg:erc-color-face13 ((t (:foreground "deeppink"))))
     ;; (fg:erc-color-face14 ((t (:foreground "gray50"))))
     ;; (fg:erc-color-face15 ((t (:foreground "gray90"))))
     ;; (fg:erc-color-face2 ((t (:foreground "blue4"))))
     ;; (fg:erc-color-face3 ((t (:foreground "green4"))))
     ;; (fg:erc-color-face4 ((t (:foreground "red"))))
     ;; (fg:erc-color-face5 ((t (:foreground "brown"))))
     ;; (fg:erc-color-face6 ((t (:foreground "purple"))))
     ;; (fg:erc-color-face7 ((t (:foreground "orange"))))
     ;; (fg:erc-color-face8 ((t (:foreground "yellow"))))
     ;; (fg:erc-color-face9 ((t (:foreground "green"))))
     ;; (file-name-shadow ((t (:foreground "grey70"))))
     ;; (gnus-group-mail-1-empty-face ((t (:foreground "aquamarine1"))))
     ;; (gnus-group-mail-1-face ((t (:bold t :foreground "aquamarine1" :weight bold))))
     ;; (gnus-group-mail-2-empty-face ((t (:foreground "aquamarine2"))))
     ;; (gnus-group-mail-2-face ((t (:bold t :foreground "aquamarine2" :weight bold))))
     ;; (gnus-group-mail-3-empty-face ((t (:foreground "aquamarine3"))))
     ;; (gnus-group-mail-3-face ((t (:bold t :foreground "aquamarine3" :weight bold))))
     ;; (gnus-group-mail-low-empty-face ((t (:foreground "aquamarine4"))))
     ;; (gnus-group-mail-low-face ((t (:bold t :foreground "aquamarine4" :weight bold))))
     ;; (gnus-group-news-1-empty-face ((t (:foreground "PaleTurquoise"))))
     ;; (gnus-group-news-1-face ((t (:bold t :foreground "PaleTurquoise" :weight bold))))
     ;; (gnus-group-news-2-empty-face ((t (:foreground "turquoise"))))
     ;; (gnus-group-news-2-face ((t (:bold t :foreground "turquoise" :weight bold))))
     ;; (gnus-group-news-3-empty-face ((t (nil))))
     ;; (gnus-group-news-3-face ((t (:bold t :weight bold))))
     ;; (gnus-group-news-4-empty-face ((t (nil))))
     ;; (gnus-group-news-4-face ((t (:bold t :weight bold))))
     ;; (gnus-group-news-5-empty-face ((t (nil))))
     ;; (gnus-group-news-5-face ((t (:bold t :weight bold))))
     ;; (gnus-group-news-6-empty-face ((t (nil))))
     ;; (gnus-group-news-6-face ((t (:bold t :weight bold))))
     ;; (gnus-group-news-low-empty-face ((t (:foreground "DarkTurquoise"))))
     ;; (gnus-group-news-low-face ((t (:bold t :foreground "DarkTurquoise" :weight bold))))
     ;; (gnus-splash-face ((t (:foreground "Brown"))))
     ;; (gnus-summary-cancelled-face ((t (:background "black" :foreground "yellow"))))
     ;; (gnus-summary-high-ancient-face ((t (:bold t :foreground "SkyBlue" :weight bold))))
     ;; (gnus-summary-high-read-face ((t (:bold t :foreground "PaleGreen" :weight bold))))
     ;; (gnus-summary-high-ticked-face ((t (:bold t :foreground "pink" :weight bold))))
     ;; (gnus-summary-high-unread-face ((t (:bold t :weight bold))))
     ;; (gnus-summary-low-ancient-face ((t (:italic t :foreground "SkyBlue" :slant italic))))
     ;; (gnus-summary-low-read-face ((t (:italic t :foreground "PaleGreen" :slant italic))))
     ;; (gnus-summary-low-ticked-face ((t (:italic t :foreground "pink" :slant italic))))
     ;; (gnus-summary-low-unread-face ((t (:italic t :slant italic))))
     ;; (gnus-summary-normal-ancient-face ((t (:foreground "SkyBlue"))))
     ;; (gnus-summary-normal-read-face ((t (:foreground "PaleGreen"))))
     ;; (gnus-summary-normal-ticked-face ((t (:foreground "pink"))))
     ;; (gnus-summary-normal-unread-face ((t (nil))))
     ;; (gnus-summary-selected-face ((t (:underline t))))
     ;; (holiday ((t (:background "chocolate4"))))
     ;; (info-header-node ((t (:italic t :bold t :weight bold :slant italic :foreground "white"))))
     ;; (info-header-xref ((t (:foreground "cyan1" :underline t))))
     ;; (info-menu-header ((t (:bold t :family "Droid Sans" :weight bold))))
     ;; (info-menu-star ((t (:foreground "red1"))))
     ;; (info-node ((t (:italic t :bold t :foreground "white" :slant italic :weight bold))))
     ;; (info-title-1 ((t (:bold t :weight bold :family "Droid Sans" :height 1.728))))
     ;; (info-title-2 ((t (:bold t :family "Droid Sans" :weight bold :height 1.44))))
     ;; (info-title-3 ((t (:bold t :weight bold :family "Droid Sans" :height 1.2))))
     ;; (info-title-4 ((t (:bold t :family "Droid Sans" :weight bold))))
     ;; (info-xref ((t (:underline t :foreground "cyan1"))))
     ;; (info-xref-visited ((t (:foreground "violet" :underline t))))
     ;; (isearch ((t (:background "palevioletred2" :foreground "brown4"))))
     ;; (isearch-fail ((t (:background "red4"))))
     ;; (iswitchb-current-match ((t (:foreground "LightSkyBlue"))))
     ;; (iswitchb-invalid-regexp ((t (:bold t :weight bold :foreground "Pink"))))
     ;; (iswitchb-single-match ((t (:foreground "chocolate1"))))
     ;; (iswitchb-virtual-matches ((t (:foreground "LightSteelBlue"))))
     ;; (lazy-highlight ((t (:background "paleturquoise4"))))
     ;; (link ((t (:foreground "cyan1" :underline t))))
     ;; (link-visited ((t (:underline t :foreground "violet"))))
     ;; (match ((t (:background "RoyalBlue3"))))
     ;; (message-cited-text-face ((t (:foreground "red"))))
     ;; (message-header-cc-face ((t (:bold t :foreground "green4" :weight bold))))
     ;; (message-header-name-face ((t (:foreground "DarkGreen"))))
     ;; (message-header-newsgroups-face ((t (:italic t :bold t :foreground "yellow" :slant italic :weight bold))))
     ;; (message-header-other-face ((t (:foreground "#b00000"))))
     ;; (message-header-subject-face ((t (:foreground "green3"))))
     ;; (message-header-to-face ((t (:bold t :foreground "green2" :weight bold))))
     ;; (message-header-xheader-face ((t (:foreground "blue"))))
     ;; (message-mml-face ((t (:foreground "ForestGreen"))))
     ;; (message-separator-face ((t (:foreground "blue3"))))
     ;; (minibuffer-prompt ((t (:foreground "cyan"))))
     ;; (next-error ((t (:background "blue3"))))
     ;; (nobreak-space ((t (:foreground "cyan" :underline t))))
     ;; (outline-1 ((t (:foreground "LightSkyBlue"))))
     ;; (outline-2 ((t (:foreground "LightGoldenrod"))))
     ;; (outline-3 ((t (:foreground "Cyan"))))
     ;; (outline-4 ((t (:foreground "chocolate1"))))
     ;; (outline-5 ((t (:foreground "PaleGreen"))))
     ;; (outline-6 ((t (:foreground "Aquamarine"))))
     ;; (outline-7 ((t (:foreground "LightSteelBlue"))))
     ;; (outline-8 ((t (:foreground "LightSalmon"))))
     ;; (primary-selection ((t (:background "blue3"))))
     ;; (pulse-highlight-face ((t (:background "#AAAA33"))))
     ;; (pulse-highlight-start-face ((t (:background "#AAAA33"))))
     ;; (query-replace ((t (:foreground "brown4" :background "palevioletred2"))))
     ;; (saint/iswitchb-highlight-1-face ((t (:foreground "IndianRed1"))))
     ;; (saint/iswitchb-highlight-2-face ((t (:foreground "DarkSeaGreen3"))))
     ;; (saint/iswitchb-highlight-3-face ((t (:foreground "BrightBlack"))))
     ;; (scroll-bar ((t (:background "grey75"))))
     ;; (secondary-selection ((t (:background "SkyBlue4"))))
     ;; (semantic-decoration-on-includes ((t (nil))))
     ;; (semantic-decoration-on-private-members-face ((t (:background "#200000"))))
     ;; (semantic-decoration-on-protected-members-face ((t (:background "#000020"))))
     ;; (semantic-decoration-on-unknown-includes ((t (:background "#900000"))))
     ;; (semantic-decoration-on-unparsed-includes ((t (:background "#555500"))))
     ;; (semantic-highlight-edits-face ((t (:background "gray20"))))
     ;; (semantic-highlight-func-current-tag-face ((t (:background "gray20"))))
     ;; (semantic-tag-boundary-face ((t (:overline "cyan"))))
     ;; (semantic-tag-folding-fringe-face ((t (:background "grey10" :foreground "yellow"))))
     ;; (semantic-unmatched-syntax-face ((t (:underline "red"))))
     ;; (senator-intangible-face ((t (:foreground "gray75"))))
     ;; (senator-momentary-highlight-face ((t (:background "gray30"))))
     ;; (senator-read-only-face ((t (:background "#664444"))))
     ;; (sh-escaped-newline ((t (:foreground "LightSalmon"))))
     ;; (sh-heredoc ((t (:bold t :foreground "yellow1" :weight bold))))
     ;; (sh-quoted-exec ((t (:foreground "salmon"))))
     ;; (shadow ((t (:foreground "grey70"))))
     ;; (show-tabs-space ((t (:background "yellow1"))))
     ;; (show-tabs-tab ((t (:background "red1"))))
     ;; (speedbar-button-face ((t (:foreground "green3"))))
     ;; (speedbar-directory-face ((t (:foreground "light blue"))))
     ;; (speedbar-file-face ((t (:foreground "cyan"))))
     ;; (speedbar-highlight-face ((t (:background "sea green"))))
     ;; (speedbar-selected-face ((t (:foreground "red" :underline t))))
     ;; (speedbar-separator-face ((t (:background "blue" :foreground "white" :overline "gray"))))
     ;; (speedbar-tag-face ((t (:foreground "yellow"))))
     ;; (srecode-separator-face ((t (:bold t :strike-through t :weight bold))))
     ;; (tool-bar ((t (:background "grey75" :foreground "black" :box (:line-width 1 :style released-button)))))
     ;; (tooltip ((t (:background "lightyellow" :foreground "black"))))
     ;; (trailing-whitespace ((t (:background "red"))))
     ;; (underline ((t (:underline t))))
     ;; (variable-pitch ((t (:family "Droid Sans"))))
     ;; (vertical-border ((t (nil))))
     ;; (zmacs-region ((t (:background "blue3"))))

(defun negval/x-snowish-theme ()
  "Color theme by Denis Sukhonin, created 2009-11-17."
  (interactive)

  (setq negval/*cursor-color*     "LightSteelBlue4")
  (setq negval/*cursor-color-ro*  "Black")
  (setq negval/*background-color* "Snow1")
  (setq negval/*foreground-color* "Dark Slate Gray")

  (color-theme-install
   `(negval/x-dark-theme
     ((background-color . ,negval/*background-color*)
      (background-mode  . light)
      (border-color     . ,negval/*background-color*)
      (cursor-color     . ,negval/*cursor-color*)
      (foreground-color . ,negval/*foreground-color*)
      (mouse-color      . ,negval/*cursor-color*))
     ;; variables
     ((hl-line-face . hl-line)
      )
     ;; faces
     (sans        ((t (:family "Droid Sans"))))
     (serif       ((t (:family "Droid Serif"))))
     (variable-pitch ((t (:inherit sans))))
     (fixed-pitch    ((t (:family "Monaco"))))
     (bold        ((t (:bold t :weight bold))))
     (bold-italic ((t (:italic t :bold t :slant italic :weight bold))))
     (italic      ((t (:italic t :slant italic))))
     (small       ((t (:height 0.85))))
     (default     ((t (:inherit fixed-pitch :height 80))))

     (fringe    ((t (:background "Snow2"))))
     (highlight ((t (:foreground "Orange3" :underline "Orange3" :inherit bold))))
     (region    ((t (:background "Moccasin"))))
     (hl-line   ((t (:background "Mint Cream"))))
     (mode-line ((t (:background "Snow3" :foreground "Gray10"
                     :inverse-video nil :box nil
                     :inherit (sans small)))))
     (mode-line-buffer-id ((t (:foreground "Blue4"))))
     (mode-line-emphasis  ((t (:inherit bold))))
     (mode-line-highlight ((t (:inherit highlight))))
     (mode-line-inactive  ((t (:background "Snow2" :foreground "gray10"
                               :inverse-video nil :box nil
                               :family "Droid Sans" :height 0.85 :width condensed))))
     (modeline-mousable            ((t (:box (:line-width 1 :style none)))))
     (modeline-mousable-minor-mode ((t (:box (:line-width 1 :style none)))))
     (which-func ((t (:foreground "Blue4" :width condensed :inherit fixed-pitch))))
     (show-paren-match ((t (:background "Alice Blue"))))
     (show-paren-mismatch ((t (:foreground "Red" :inherit bold))))
     (header-line ((t (:background "Snow2" :inherit (fixed-pitch)))))
     (flymake-errline  ((t (:underline "Red2"  :inherit bold))))
     (flymake-warnline ((t (:underline "Gold3" :inherit bold))))
     (flyspell-incorrect ((t (:underline "Red2"))))
     (flyspell-duplicate ((t (:underline "Gold3"))))
     (linum ((t (:foreground "DeepSkyBlue4" :inherit (fringe)))))

     (font-lock-builtin-face           ((t (:foreground "Blue"))))
     (font-lock-comment-delimiter-face ((t (:foreground "DeepSkyBlue1"))))
     (font-lock-comment-face           ((t (:foreground "DeepSkyBlue3"))))
     (font-lock-constant-face          ((t (:foreground "CadetBlue4"))))
     (font-lock-doc-face               ((t (:foreground "MediumBlue" :background "White Smoke"))))
     (font-lock-doc-string-face        ((t (:foreground "MediumBlue" :background "White Smoke"))))
     (font-lock-function-name-face     ((t (:foreground "DarkBlue" :inherit bold))))
     (font-lock-keyword-face           ((t (:foreground "Blue4"))))
     (font-lock-preprocessor-face      ((t (:foreground "Blue3"))))
     (font-lock-reference-face         ((t (:foreground "Red3"))))
     (font-lock-string-face            ((t (:foreground "DarkViolet"))))
     (font-lock-type-face              ((t (:foreground "GoldenRod" :inherit bold))))
     (font-lock-variable-name-face     ((t (:foreground "Tomato"))))
     (font-lock-warning-face           ((t (:foreground "Red" :inherit bold))))

     (widget-button ((t (:bold t :weight bold))))
     (widget-button-pressed ((t (:foreground "Red"))))
     (widget-documentation ((t (:inherit font-lock-comment-face))))
     (widget-field ((t (:background "Gray85" :box t))))
     (widget-inactive ((t (:foreground "Light Gray"))))
     (widget-single-line-field ((t (:background "Gray85" :box t))))

     (toolbar ((t (:background "Gray90" :foreground "Black"
                   :box (:line-width 1 :color "Gray90" :style released-button)))))
     (custom-button ((t (:background "Gray85" :foreground "Black"
                         :box (:line-width 1 :color "Gray85" :style released-button)))))
     (custom-button-mouse ((t (:background "Gray90" :inherit custom-button))))
     (custom-button-pressed ((t (:background "Gray85" :foreground "Black"
                                 :box (:line-width 1 :color "Gray85" :style pressed-button)))))

     (dired-directory ((t (:foreground "Blue4" :inherit bold))))
     ;; (dired-flagged ((t (:bold t :weight bold :foreground "Pink"))))
     ;; (dired-header ((t (:foreground "PaleGreen"))))
     ;; (dired-ignored ((t (:foreground "grey70"))))
     ;; (dired-mark ((t (:foreground "Aquamarine"))))
     ;; (dired-marked ((t (:bold t :weight bold :foreground "Pink"))))
     ;; (dired-perm-write ((t (:foreground "chocolate1"))))
     (dired-symlink ((t (:foreground "Dark Cyan"))))
     ;; (dired-warning ((t (:bold t :weight bold :foreground "Pink"))))

     (diff-added ((t (:foreground "Green4"))))
     (diff-changed ((t (:foreground "Light Slate Blue"))))
     (diff-context ((t (:foreground ,negval/*foreground-color*))))
     (diff-file-header ((t (:background "LightGray" :foreground "Red4"))))
     (diff-file1-hunk-header ((t (:background "DarkSeaGreen1" :foreground "Blue"))))
     (diff-file2-hunk-header ((t (:background "PaleGoldenrod" :foreground "Red"))))
     (diff-function ((t (:foreground "Red"))))
     (diff-header ((t (:foreground "DodgerBlue4"))))
     (diff-hunk-header ((t (:background "Salmon" :foreground "Blue"))))
     (diff-index ((t (:foreground "Green"))))
     (diff-indicator-added ((t (:background "Green4" :foreground "PaleGoldenrod"))))
     (diff-indicator-changed ((t (:background "Dark Slate Blue" :foreground "PaleGoldenrod"))))
     (diff-indicator-removed ((t (:background "firebrick4" :foreground "PaleGoldenrod"))))
     (diff-nonexistent ((t (:foreground "Blue"))))
     (diff-refine-change ((t (:background nil :box t))))
     (diff-removed ((t (:foreground "Firebrick1")))))))

(add-to-list 'color-themes '(negval/x-snowish-theme  "My snowish theme" "Denis Sukhonin"))

;; change cursor color based on mode
;; http://www.emacswiki.org/cgi-bin/wiki/download/cursor-chg.el
(setq hcz-set-cursor-color-color "")
(setq hcz-set-cursor-color-buffer "")
(defun hcz-set-cursor-color-according-to-mode ()
  "change cursor color according to some minor modes."
  ;; set-cursor-color is somewhat costly, so we only call it when
  ;; needed:
  (let ((color
         (if buffer-read-only negval/*cursor-color-ro*
           (if overwrite-mode "Red" negval/*cursor-color*))))
    (unless (and
             (string= color hcz-set-cursor-color-color)
             (string= (buffer-name) hcz-set-cursor-color-buffer))
      (set-cursor-color (setq hcz-set-cursor-color-color color))
      (setq hcz-set-cursor-color-buffer (buffer-name)))))

(negval/x-clipboard)
(negval/x-dark-theme)
(negval/x-bars)
(negval/x-etc)

(add-hook 'post-command-hook 'hcz-set-cursor-color-according-to-mode)

;;; x.el ends here
